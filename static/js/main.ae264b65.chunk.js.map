{"version":3,"sources":["components/Display.js","components/Keyboard.js","components/Indicator.js","components/SafePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Display","pin","className","Keyboard","handleNum","handleCLR","handleENT","Container","id","onClick","Indicator","unlock","SafePage","useState","setPin","correctPin","setCorrectPin","setUnlock","Row","Col","e","length","prevState","target","toast","info","warning","success","error","App","fluid","autoClose","hideProgressBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAiBeA,MAdf,YAA2B,IAARC,EAAO,EAAPA,IACjB,OACE,mCACE,qBAAKC,UAAU,UAAf,SACE,oBAAIA,UAAU,iBAAd,SAAgCD,SCoCzBE,MAtCf,YAAsD,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,UACvC,OACE,cAACC,EAAA,EAAD,UACE,gCACE,kCACE,+BACE,oBAAIC,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,kBAEF,+BACE,oBAAII,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,kBAEF,+BACE,oBAAII,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,IAAIC,QAASL,EAApB,kBAEF,+BACE,oBAAII,GAAG,MAAMC,QAASJ,EAAtB,iBACA,oBAAIG,GAAG,IAAIC,QAASL,EAApB,eACA,oBAAII,GAAG,MAAMC,QAASH,EAAtB,4BCjBGI,EARG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAAO,qBAAKT,UAAWS,EAAS,cAAgB,eC+EnCC,MA5Ef,WAAqB,IAAD,EACIC,mBAAS,IADb,mBACXZ,EADW,KACNa,EADM,OAEkBD,mBAAS,IAF3B,mBAEXE,EAFW,KAECC,EAFD,OAGUH,oBAAS,GAHnB,mBAGXF,EAHW,KAGHM,EAHG,KAqDlB,OACE,cAACV,EAAA,EAAD,CAAWL,UAAU,iBAArB,SACE,eAACgB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACEf,UArDV,SAAmBgB,GACbnB,EAAIoB,OAAS,GACfP,GAAO,SAACQ,GACN,OAAOA,EAAYF,EAAEG,OAAOf,OAmDxBH,UA9CV,WACES,GAAO,SAACQ,GACN,MAAO,OA6CDhB,UAzCV,WACMK,EAWe,IAAfV,EAAIoB,QACNL,EAAcf,GACdgB,GAAU,GACVO,IAAMC,KAAK,oBAEXD,IAAME,QAAQ,qCAKG,IAAfzB,EAAIoB,OACFpB,IAAQc,GACVE,GAAU,GACVO,IAAMG,QAAQ,sBAEdH,IAAMI,MAAM,2BAGdJ,IAAME,QAAQ,qCAxBhBZ,GAAO,SAACQ,GACN,MAAO,WAqCL,eAACH,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,UACE,cAAC,EAAD,CAASjB,IAAKA,MAEhB,cAACiB,EAAA,EAAD,CAAKhB,UAAU,yBAAf,SACE,cAAC,EAAD,CAAWS,OAAQA,e,MC5DhBkB,MATf,WACE,OACE,eAACtB,EAAA,EAAD,CAAWuB,OAAK,EAAC5B,UAAU,UAA3B,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAgB6B,UAAW,IAAMC,iBAAe,QCEvCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae264b65.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Display({ pin }) {\n  return (\n    <>\n      <div className=\"display\">\n        <h1 className=\"number-display\">{pin}</h1>\n      </div>\n    </>\n  );\n}\n\nDisplay.propTypes = {\n  pin: PropTypes.string.isRequired,\n};\n\nexport default Display;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\n\nfunction Keyboard({handleNum, handleCLR, handleENT}) {\n  return (\n    <Container>\n      <table>\n        <tbody>\n          <tr>\n            <td id=\"1\" onClick={handleNum}>1</td>\n            <td id=\"2\" onClick={handleNum}>2</td>\n            <td id=\"3\" onClick={handleNum}>3</td>\n          </tr>\n          <tr>\n            <td id=\"4\" onClick={handleNum}>4</td>\n            <td id=\"5\" onClick={handleNum}>5</td>\n            <td id=\"6\" onClick={handleNum}>6</td>\n          </tr>\n          <tr>\n            <td id=\"7\" onClick={handleNum}>7</td>\n            <td id=\"8\" onClick={handleNum}>8</td>\n            <td id=\"9\" onClick={handleNum}>9</td>\n          </tr>\n          <tr>\n            <td id=\"CLR\" onClick={handleCLR}>CLR</td>\n            <td id=\"0\" onClick={handleNum}>0</td>\n            <td id=\"ENT\" onClick={handleENT}>ENT</td>\n          </tr>\n        </tbody>\n      </table>\n    </Container>\n  );\n}\n\nKeyboard.propTypes = {\n  handleNum: PropTypes.func.isRequired,\n  handleCLR: PropTypes.func.isRequired,\n  handleENT: PropTypes.func.isRequired,\n\n};\n\nexport default Keyboard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Indicator = ({ unlock }) => {\n  return <div className={unlock ? \"green-light\" : \"red-light\"}></div>;\n};\n\nIndicator.propTypes = {\n  unlock: PropTypes.bool.isRequired,\n};\n\nexport default Indicator;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Display from \"./Display\";\nimport Keyboard from \"./Keyboard\";\nimport Indicator from \"./Indicator\";\nimport { toast } from \"react-toastify\";\n\nfunction SafePage() {\n  const [pin, setPin] = useState(\"\");\n  const [correctPin, setCorrectPin] = useState(\"\");\n  const [unlock, setUnlock] = useState(true);\n\n  function handleNum(e) {\n    if (pin.length < 4) {\n      setPin((prevState) => {\n        return prevState + e.target.id;\n      });\n    }\n  }\n\n  function handleCLR() {\n    setPin((prevState) => {\n      return \"\";\n    });\n  }\n\n  function handleENT() {\n    if (unlock) {\n      lockSafe();\n    } else {\n      unlockSafe();\n    }\n    setPin((prevState) => {\n      return \"\";\n    });\n  }\n\n  function lockSafe() {\n    if (pin.length === 4) {\n      setCorrectPin(pin);\n      setUnlock(false);\n      toast.info(\"Safe is locked!\");\n    } else {\n      toast.warning(\"PIN has to be 4 digit! Try again!\");\n    }\n  }\n\n  function unlockSafe() {\n    if (pin.length === 4) {\n      if (pin === correctPin) {\n        setUnlock(true);\n        toast.success(\"Safe is Unlocked!\");\n      } else {\n        toast.error(\"invalid PIN! Try again!\");\n      }\n    } else {\n      toast.warning(\"PIN has to be 4 digit! Try again!\");\n    }\n  }\n\n  return (\n    <Container className=\"safe-container\">\n      <Row>\n        <Col>\n          <Keyboard\n            handleNum={handleNum}\n            handleCLR={handleCLR}\n            handleENT={handleENT}\n          />\n        </Col>\n        <Col>\n          <Row>\n            <Display pin={pin} />\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Indicator unlock={unlock} />\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SafePage;\n","import { Container } from \"react-bootstrap\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport SafePage from \"./SafePage\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Container fluid className=\"p-0 App\">\n      <SafePage />\n      <ToastContainer autoClose={3000} hideProgressBar />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}